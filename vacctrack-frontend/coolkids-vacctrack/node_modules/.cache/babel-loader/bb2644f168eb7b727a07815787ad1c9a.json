{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from 'react-bootstrap';\nimport { useInput } from './hooks/input-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddUser({\n  SERVICE_URL,\n  handleClose\n}) {\n  _s();\n\n  const {\n    value: username,\n    bind: bindUsername,\n    reset: resetUsername\n  } = useInput('');\n  const {\n    value: password,\n    bind: bindPassword,\n    reset: resetPassword\n  } = useInput('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      \"name\": username,\n      \"password\": password\n    };\n    console.log(user);\n    fetch(SERVICE_URL + '/AdminPortal/CreateUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      console.log('Add User - Success:', data); //setMarkers([...markers, user]);\n\n      handleClose();\n    }).catch(error => {\n      console.log('Add User - Error:', error);\n    });\n    resetUsername();\n    resetPassword();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"userame\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          ...bindUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          ...bindPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"uWeHmMpNUxymX2ji2E//wX5iKBo=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/AddUser.js"],"names":["Form","Button","useInput","AddUser","SERVICE_URL","handleClose","value","username","bind","bindUsername","reset","resetUsername","password","bindPassword","resetPassword","handleSubmit","e","preventDefault","user","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,SAASC,OAAT,CAAkB;AAAGC,EAAAA,WAAH;AAAgBC,EAAAA;AAAhB,CAAlB,EAAiD;AAAA;;AAC/C,QAAM;AAAEC,IAAAA,KAAK,EAACC,QAAR;AAAkBC,IAAAA,IAAI,EAACC,YAAvB;AAAqCC,IAAAA,KAAK,EAACC;AAA3C,MAA6DT,QAAQ,CAAC,EAAD,CAA3E;AACA,QAAM;AAAEI,IAAAA,KAAK,EAACM,QAAR;AAAkBJ,IAAAA,IAAI,EAACK,YAAvB;AAAqCH,IAAAA,KAAK,EAACI;AAA3C,MAA6DZ,QAAQ,CAAC,EAAD,CAA3E;;AAEA,QAAMa,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACT,cAAQX,QADC;AAET,kBAAYK;AAFH,KAAb;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAGAG,IAAAA,KAAK,CAACjB,WAAW,GAAG,yBAAf,EAA0C;AAC7CkB,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALuC,KAA1C,CAAL,CAOCS,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCU,IAAnC,EADY,CAEZ;;AACAzB,MAAAA,WAAW;AACZ,KAZD,EAaC0B,KAbD,CAaQC,KAAD,IAAW;AAChBb,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCY,KAAjC;AACD,KAfD;AAkBArB,IAAAA,aAAa;AACbG,IAAAA,aAAa;AAEd,GA9BD;;AAgCA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACY,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,UAAtC;AAAA,aAAqDN;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,eAKY,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,WAAW,EAAC,UAA1C;AAAA,aAAyDI;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALZ,eASY,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GArDQV,O;UAC4DD,Q,EACAA,Q;;;KAF5DC,O;AAuDT,eAAeA,OAAf","sourcesContent":["import { Form, Button } from 'react-bootstrap';\nimport { useInput } from './hooks/input-hook';\n\nfunction AddUser ({  SERVICE_URL, handleClose }) {\n  const { value:username, bind:bindUsername, reset:resetUsername } = useInput('');\n  const { value:password, bind:bindPassword, reset:resetPassword } = useInput('');\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const user = {\n        \"name\": username,\n        \"password\": password\n    }\n    console.log(user);\n\n\n    fetch(SERVICE_URL + '/AdminPortal/CreateUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Add User - Success:', data);\n      //setMarkers([...markers, user]);\n      handleClose();\n    })\n    .catch((error) => {\n      console.log('Add User - Error:', error);\n    });\n\n\n    resetUsername();\n    resetPassword();\n\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"userame\">\n                      <Form.Label>Username:</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Username\" {...bindUsername}/>\n                  </Form.Group>\n                  <Form.Group controlId=\"password\">\n                      <Form.Label>Password:</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"Password\" {...bindPassword} />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}