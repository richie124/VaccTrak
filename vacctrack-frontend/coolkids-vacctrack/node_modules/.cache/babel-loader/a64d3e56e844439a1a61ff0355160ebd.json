{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/software-guild/final-project/coolkids-vacctrack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef, useCallback } from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\nimport Search from './Search';\nimport Locate from './Locate';\nimport { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_URL = \"http://localhost:8080/VaccTrak\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 37.090240,\n  lng: -95.712891\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst markers = [{\n  name: \"Chicago\",\n  numFirstVaccine: 100,\n  numSecondVaccine: 100,\n  lat: 41.878113,\n  lng: -87.629799\n}, {\n  name: \"New Jersey\",\n  numFirstVaccine: 200,\n  numSecondVaccine: 100,\n  lat: 40.073040,\n  lng: -74.724319\n}];\nconst markers2 = [{\n  \"id\": 1,\n  \"name\": \"Walgreens\",\n  \"address\": \"7150 W. Archer Ave.\",\n  \"city\": \"Chicago\",\n  \"state\": \"IL\",\n  \"zipcode\": \"60638\",\n  \"phoneNumber\": \"(773) 229-1447\",\n  \"singleDoses\": 32,\n  \"doubleDoses\": 45\n}, {\n  \"id\": 2,\n  \"name\": \"Swedish Hospital\",\n  \"address\": \"5145 N California Avenue\",\n  \"city\": \"Chicago\",\n  \"state\": \"IL\",\n  \"zipcode\": \"60625\",\n  \"phoneNumber\": \"(773) 878-8200\",\n  \"singleDoses\": 537,\n  \"doubleDoses\": 525\n}];\n\nfunction App() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAp1BrMA7-YofbC3iJapScTWCpI8GmZm-w\",\n    libraries: libraries\n  }); // const [markers, setMarkers] = useState([]);\n\n  const [selected, setSelected] = useState(null);\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map; // fetch(SERVICE_URL + \"/getAllVaccCenters\")\n    // .then(data => data.json())\n    // .then(data => setMarkers(data.map((vaccCenter) => {getVaccCenterLatLong(vaccCenter)} )));\n\n    console.log(Promise.all(markers2.map(async vaccCenter => {\n      return await getVaccCenterLatLong(vaccCenter);\n    })));\n  }, []);\n  const panTo = useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  const getVaccCenterLatLong = useCallback(async vaccCenter => {\n    const address = vaccCenter.address + \" \" + vaccCenter.city + \", \" + vaccCenter.state + \" \" + vaccCenter.zipcode;\n\n    try {\n      const {\n        lat,\n        lng\n      } = await getLatLngFromAddress(address);\n      return { ...vaccCenter,\n        lat,\n        lng\n      };\n    } catch (error) {\n      console.log(\"error getting latlong for vaccenter \" + vaccCenter.id);\n    }\n  }, []);\n  const getLatLngFromAddress = useCallback(async address => {\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      return {\n        lat,\n        lng\n      };\n    } catch (error) {\n      console.log(\"error1\");\n    }\n  }, []);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"logo.png\",\n      alt: \"logo\",\n      id: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      panTo: panTo,\n      getLatLngFromAddress: getLatLngFromAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Locate, {\n      panTo: panTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 4.7,\n      center: center,\n      options: options,\n      onLoad: onMapLoad,\n      children: [markers.map((marker, i) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        onClick: () => {\n          setSelected(marker);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.lat,\n          lng: selected.lng\n        },\n        onCloseClick: () => setSelected(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selected.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"1st Dose: \", selected.singleDoses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"2nd Dose: \", selected.doubleDoses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), \"Total Vaccinated: \", selected.singleDoses + selected.doubleDoses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"sc5U2WqcaQ4bBV7kth3qjkEfFQE=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joey/Desktop/software-guild/final-project/coolkids-vacctrack/src/App.js"],"names":["React","useState","useRef","useCallback","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","Search","Locate","getGeocode","getLatLng","SERVICE_URL","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","markers","name","numFirstVaccine","numSecondVaccine","markers2","App","isLoaded","loadError","googleMapsApiKey","selected","setSelected","mapRef","onMapLoad","map","current","console","log","Promise","all","vaccCenter","getVaccCenterLatLong","panTo","setZoom","address","city","state","zipcode","getLatLngFromAddress","error","id","results","marker","i","singleDoses","doubleDoses"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useRef, useCallback} from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\nimport Search from './Search';\nimport Locate from './Locate';\nimport {\n  getGeocode,\n  getLatLng\n} from \"use-places-autocomplete\";\n\nconst SERVICE_URL = \"http://localhost:8080/VaccTrak\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 37.090240,\n  lng: -95.712891\n}\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n}\n\nconst markers = [\n  {\n    name: \"Chicago\",\n    numFirstVaccine: 100,\n    numSecondVaccine: 100,\n    lat: 41.878113,\n    lng: -87.629799\n  },\n  {\n    name: \"New Jersey\",\n    numFirstVaccine: 200,\n    numSecondVaccine: 100,\n    lat: 40.073040,\n    lng: -74.724319\n  }\n]\n\nconst markers2 = [\n  {\n        \"id\": 1,\n        \"name\": \"Walgreens\",\n        \"address\": \"7150 W. Archer Ave.\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\",\n        \"zipcode\": \"60638\",\n        \"phoneNumber\": \"(773) 229-1447\",\n        \"singleDoses\": 32,\n        \"doubleDoses\": 45\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Swedish Hospital\",\n        \"address\": \"5145 N California Avenue\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\",\n        \"zipcode\": \"60625\",\n        \"phoneNumber\": \"(773) 878-8200\",\n        \"singleDoses\": 537,\n        \"doubleDoses\": 525\n    }\n]\n\n\nfunction App() {\n  const {isLoaded, loadError} = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAp1BrMA7-YofbC3iJapScTWCpI8GmZm-w\",\n    libraries: libraries\n  })\n  // const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback(\n    (map) => {\n      mapRef.current = map;\n      // fetch(SERVICE_URL + \"/getAllVaccCenters\")\n      // .then(data => data.json())\n      // .then(data => setMarkers(data.map((vaccCenter) => {getVaccCenterLatLong(vaccCenter)} )));\n      console.log(Promise.all(markers2.map(async (vaccCenter) => {\n        return await getVaccCenterLatLong(vaccCenter)\n      })));\n    },\n    []\n  )\n\n  const panTo = useCallback(\n  ({lat, lng}) => {\n    mapRef.current.panTo({lat, lng});\n    mapRef.current.setZoom(14);\n  },\n  [],\n  )\n\n  const getVaccCenterLatLong = useCallback(async (vaccCenter) => {\n    const address = vaccCenter.address + \" \" + vaccCenter.city + \", \" + vaccCenter.state + \" \" + vaccCenter.zipcode;\n    try {\n    const {lat, lng} = await getLatLngFromAddress(address);\n    return {...vaccCenter, lat, lng};\n    } catch(error) {\n      console.log(\"error getting latlong for vaccenter \" + vaccCenter.id);\n    }\n    \n  }, [])\n\n  const getLatLngFromAddress = useCallback(async (address) => {\n        try {\n          const results = await getGeocode({address});\n          const { lat, lng } = await getLatLng(results[0]);\n          return ({lat, lng})\n        } catch(error) {\n          console.log(\"error1\");\n        }\n  }, []);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n\n  return (<div>\n\n    <img src=\"logo.png\" alt=\"logo\" id=\"logo\"/>\n    <Search panTo={panTo} getLatLngFromAddress={getLatLngFromAddress}/>\n    <Locate panTo={panTo} />\n\n    <GoogleMap \n    mapContainerStyle={mapContainerStyle}\n    zoom={4.7}\n    center={center}\n    options={options}\n    onLoad={onMapLoad}>\n      {markers.map((marker, i) => \n        <Marker \n          key={i} \n          position={{lat: marker.lat, lng: marker.lng}}\n          onClick={() => {\n            setSelected(marker);\n          }}\n        />\n      )}\n\n      {selected ? (\n        <InfoWindow \n        position={{lat: selected.lat, lng: selected.lng}} \n        onCloseClick={() => setSelected(null)}>\n          <div>\n            <h3>{selected.name}</h3>\n            <div>\n              <div>\n                1st Dose: {selected.singleDoses}\n              </div>\n              <div>\n                2nd Dose: {selected.doubleDoses}\n              </div>\n              <hr />\n              Total Vaccinated: {selected.singleDoses + selected.doubleDoses}\n            </div>\n          </div>\n        </InfoWindow>\n      ) : null}\n    </GoogleMap>\n  </div>)\n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}