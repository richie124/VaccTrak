{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { Alert } from 'bootstrap';\nimport { Form, Button } from 'react-bootstrap';\nimport { useInput } from './hooks/input-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddUser({\n  SERVICE_URL,\n  handleClose\n}) {\n  _s();\n\n  const {\n    value: username,\n    bind: bindUsername,\n    reset: resetUsername\n  } = useInput('');\n  const {\n    value: password,\n    bind: bindPassword,\n    reset: resetPassword\n  } = useInput('');\n  const {\n    value: password2,\n    bind: bindPassword2,\n    reset: resetPassword2\n  } = useInput('');\n\n  const validateForm = user => {\n    let errors = {\n      isValid: true\n    };\n\n    if (!user.username) {\n      errors.username = \"Please enter a username\";\n      errors.isValid = false;\n    }\n\n    if (!user.password) {\n      errors.password = \"Please enter a password\";\n      errors.isValid = false;\n    } else if (user.password !== user.password2) {\n      errors.password = \"Passwords do not match.\";\n      errors.isValid = false;\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      \"name\": username,\n      \"password\": password\n    };\n    console.log(user);\n    let validationErrors = validateForm({ ...user,\n      password2\n    });\n\n    if (!validationErrors.isValid) {\n      Alert(validationErrors.username, validationErrors.password);\n      return;\n    }\n\n    fetch(SERVICE_URL + '/AdminPortal/CreateUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      console.log('Add User - Success:', data); //setMarkers([...markers, user]);\n\n      handleClose();\n    }).catch(error => {\n      console.log('Add User - Error:', error);\n    });\n    resetUsername();\n    resetPassword();\n    resetPassword2();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          ...bindUsername,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          ...bindPassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Re-enter Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Re-Enter Password\",\n          ...bindPassword2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"iujOe7mj5mSwbylsB2xBTitbzu0=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/AddUser.js"],"names":["Alert","Form","Button","useInput","AddUser","SERVICE_URL","handleClose","value","username","bind","bindUsername","reset","resetUsername","password","bindPassword","resetPassword","password2","bindPassword2","resetPassword2","validateForm","user","errors","isValid","handleSubmit","e","preventDefault","console","log","validationErrors","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error"],"mappings":"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","sourcesContent":["import { Alert } from 'bootstrap';\nimport { Form, Button } from 'react-bootstrap';\nimport { useInput } from './hooks/input-hook';\n\nfunction AddUser ({  SERVICE_URL, handleClose }) {\n  const { value:username, bind:bindUsername, reset:resetUsername } = useInput('');\n  const { value:password, bind:bindPassword, reset:resetPassword } = useInput('');\n  const { value:password2, bind:bindPassword2, reset:resetPassword2 } = useInput('');\n  const validateForm = (user) => {\n    let errors = {isValid: true};\n\n    if (!user.username) {\n      errors.username = \"Please enter a username\";\n      errors.isValid = false;\n    }\n\n    if(!user.password) {\n      errors.password = \"Please enter a password\"\n      errors.isValid = false;\n    } else if (user.password !== user.password2){\n      errors.password = \"Passwords do not match.\"\n      errors.isValid = false;\n    }\n\n    return errors;\n  }\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const user = {\n        \"name\": username,\n        \"password\": password\n    }\n    console.log(user);\n\n    let validationErrors = validateForm({...user, password2});\n    if (!validationErrors.isValid) {\n      Alert(validationErrors.username, validationErrors.password);\n      return;\n    }\n\n\n    fetch(SERVICE_URL + '/AdminPortal/CreateUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Add User - Success:', data);\n      //setMarkers([...markers, user]);\n      handleClose();\n    })\n    .catch((error) => {\n      console.log('Add User - Error:', error);\n    });\n\n\n    resetUsername();\n    resetPassword();\n    resetPassword2();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"username\">\n                      <Form.Label>Username:</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Username\" {...bindUsername} required/>\n                  </Form.Group>\n                  <Form.Group controlId=\"password1\">\n                      <Form.Label>Password:</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"Password\" {...bindPassword} required/>\n                  </Form.Group>\n                  <Form.Group controlId=\"password2\">\n                      <Form.Label>Re-enter Password:</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"Re-Enter Password\" {...bindPassword2} />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}