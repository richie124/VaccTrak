{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\nimport Search from './Search';\nimport Locate from './Locate';\nimport Create from './Create';\nimport AddVacc from './AddVacc';\nimport { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Modal, Button, Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_URL = \"http://localhost:8080/VaccTrak\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 37.090240,\n  lng: -95.712891\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst startZoom = 4.7;\n\nfunction App() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAp1BrMA7-YofbC3iJapScTWCpI8GmZm-w\",\n    libraries: libraries\n  });\n  const [selected, setSelected] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [newCenterShow, setNewCenterShow] = useState(false);\n  const [addVaccShow, setAddVaccShow] = useState(false);\n  const [moreInfoShow, setMoreInfoShow] = useState(false);\n  const [isZoomed, setIsZoomed] = useState(false);\n  const [stateChartShow, setStateChartShow] = useState(false);\n  useEffect(() => {\n    loadData();\n  }, []);\n  const loadData = useCallback(() => {\n    fetch(SERVICE_URL + \"/getAllVaccCenters\").then(data => data.json()).then(data => setMarkers(data));\n  }, []);\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []); // const getData = async (vaccList) => {\n  //   return Promise.all(vaccList.map((vaccCenter) => \n  //       getVaccCenterLatLong(vaccCenter)));\n  // }\n\n  const returnZoom = useCallback(() => {\n    panTo({\n      lat: center.lat,\n      lng: center.lng\n    }, startZoom);\n  }, []);\n  const panTo = useCallback(({\n    lat,\n    lng\n  }, zoom) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(zoom);\n    zoom !== startZoom ? setIsZoomed(true) : setIsZoomed(false);\n    console.log(isZoomed);\n    console.log(zoom);\n  });\n  const updateMarker = useCallback(updateCenter => {\n    setSelected(updateCenter);\n    loadData();\n  }, []);\n  const getVaccCenterLatLong = useCallback(async vaccCenter => {\n    const address = vaccCenter.address + \" \" + vaccCenter.city + \", \" + vaccCenter.state + \" \" + vaccCenter.zipcode;\n\n    try {\n      const {\n        lat,\n        lng\n      } = await getLatLngFromAddress(address);\n      return { ...vaccCenter,\n        lat,\n        lng\n      };\n    } catch (error) {\n      console.log(\"error getting latlong for vaccenter \" + vaccCenter.id);\n    }\n  }, []);\n  const getLatLngFromAddress = useCallback(async address => {\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      return {\n        lat,\n        lng\n      };\n    } catch (error) {\n      console.log(\"error1\");\n    }\n  }, []);\n\n  const handleNewCenterClose = () => setNewCenterShow(false);\n\n  const handleNewCenterShow = () => setNewCenterShow(true);\n\n  const handleAddVaccClose = () => setAddVaccShow(false);\n\n  const handleAddVaccShow = () => setAddVaccShow(true);\n\n  const handleMoreInfoShow = () => setMoreInfoShow(true);\n\n  const handleMoreInfoHide = () => setMoreInfoShow(false);\n\n  const handleStateChartShow = () => setStateChartShow(true);\n\n  const handleStateChartClose = () => setStateChartShow(false);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-custom\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\",\n        id: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        panTo: panTo,\n        getLatLngFromAddress: getLatLngFromAddress,\n        handleShow: handleNewCenterShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStateChartShow,\n        className: \"stateChartButton\",\n        children: \" Numbers by State \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Locate, {\n        panTo: panTo,\n        returnZoom: returnZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: stateChartShow,\n      onHide: handleStateChartClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Vaccination Numbers by State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No. of First Doses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No. of Second Doses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: newCenterShow,\n      onHide: handleNewCenterClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Vaccination Site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Create, {\n          getVaccCenterLatLong: getVaccCenterLatLong,\n          setMarkers: setMarkers,\n          markers: markers,\n          SERVICE_URL: SERVICE_URL,\n          handleClose: handleNewCenterClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addVaccShow,\n      onHide: handleAddVaccClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Vaccinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(AddVacc, {\n          handleClose: handleAddVaccClose,\n          SERVICE_URL: SERVICE_URL,\n          vaccCenter: selected,\n          updateMarker: updateMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: startZoom,\n      center: center,\n      options: options,\n      onLoad: onMapLoad,\n      children: [markers.map((marker, i) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: parseFloat(marker.latitude),\n          lng: parseFloat(marker.longitude)\n        },\n        onClick: () => {\n          panTo({\n            lat: parseFloat(marker.latitude),\n            lng: parseFloat(marker.longitude)\n          }, 14);\n          setSelected(marker);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: parseFloat(selected.latitude),\n          lng: parseFloat(selected.longitude)\n        },\n        onCloseClick: () => {\n          setSelected(null);\n          handleMoreInfoHide();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: selected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seeMore\",\n              children: moreInfoShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: selected.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [selected.city, \", \", selected.state, \" \", selected.zipcode]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: selected.phoneNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleMoreInfoHide,\n                  className: \"moreHide\",\n                  children: \"Hide...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleMoreInfoShow,\n                className: \"moreHide\",\n                children: \"See more info...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"1st Dose: \", selected.singleDoses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"2nd Dose: \", selected.doubleDoses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), \"Total Vaccinated: \", selected.singleDoses + selected.doubleDoses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"infoEditBar\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddVaccShow,\n              children: \"Add Vaccinations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"2kLrZhamEZjkGDVyEdNXjh/XG4E=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/App.js"],"names":["React","useState","useRef","useCallback","useEffect","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","Search","Locate","Create","AddVacc","getGeocode","getLatLng","Modal","Button","Table","SERVICE_URL","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","startZoom","App","isLoaded","loadError","googleMapsApiKey","selected","setSelected","markers","setMarkers","newCenterShow","setNewCenterShow","addVaccShow","setAddVaccShow","moreInfoShow","setMoreInfoShow","isZoomed","setIsZoomed","stateChartShow","setStateChartShow","loadData","fetch","then","data","json","mapRef","onMapLoad","map","current","returnZoom","panTo","zoom","setZoom","console","log","updateMarker","updateCenter","getVaccCenterLatLong","vaccCenter","address","city","state","zipcode","getLatLngFromAddress","error","id","results","handleNewCenterClose","handleNewCenterShow","handleAddVaccClose","handleAddVaccShow","handleMoreInfoShow","handleMoreInfoHide","handleStateChartShow","handleStateChartClose","marker","i","parseFloat","latitude","longitude","name","phoneNumber","singleDoses","doubleDoses"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useRef, useCallback, useEffect} from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\nimport Search from './Search';\nimport Locate from './Locate';\nimport Create from './Create';\nimport AddVacc from './AddVacc'\nimport {\n  getGeocode,\n  getLatLng\n} from \"use-places-autocomplete\";\nimport { Modal, Button, Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SERVICE_URL = \"http://localhost:8080/VaccTrak\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 37.090240,\n  lng: -95.712891\n}\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n}\nconst startZoom = 4.7;\n\n\nfunction App() {\n  const {isLoaded, loadError} = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAp1BrMA7-YofbC3iJapScTWCpI8GmZm-w\",\n    libraries: libraries\n  })\n\n  const [selected, setSelected] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [newCenterShow, setNewCenterShow] = useState(false);\n  const [addVaccShow, setAddVaccShow] = useState(false);\n  const [moreInfoShow, setMoreInfoShow] = useState(false);\n  const [isZoomed, setIsZoomed] = useState(false);\n  const [stateChartShow, setStateChartShow] = useState(false);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = useCallback(() => {\n    fetch(SERVICE_URL + \"/getAllVaccCenters\")\n      .then(data => data.json())\n      .then(data => setMarkers(data));\n  }, []);\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback(\n    (map) => {\n      mapRef.current = map;\n    },\n    []\n  )\n\n  // const getData = async (vaccList) => {\n  //   return Promise.all(vaccList.map((vaccCenter) => \n  //       getVaccCenterLatLong(vaccCenter)));\n  // }\n\n  const returnZoom = useCallback(() => {\n    panTo({lat:center.lat, lng: center.lng}, startZoom);\n  }, [])\n\n  const panTo = useCallback(\n  ({lat, lng}, zoom) => {\n    mapRef.current.panTo({lat, lng});\n    mapRef.current.setZoom(zoom);\n    zoom !== startZoom ? setIsZoomed(true) : setIsZoomed(false);\n    console.log(isZoomed);\n    console.log(zoom);\n  })\n\n  const updateMarker = useCallback((updateCenter) => {\n    setSelected(updateCenter);\n    loadData();\n  }, []);\n\n  const getVaccCenterLatLong = useCallback(async (vaccCenter) => {\n    const address = vaccCenter.address + \" \" + vaccCenter.city + \", \" + vaccCenter.state + \" \" + vaccCenter.zipcode;\n    try {\n    const {lat, lng} = await getLatLngFromAddress(address);\n    return {...vaccCenter, lat, lng};\n    } catch(error) {\n      console.log(\"error getting latlong for vaccenter \" + vaccCenter.id);\n    }\n    \n  }, [])\n\n  const getLatLngFromAddress = useCallback(async (address) => {\n        try {\n          const results = await getGeocode({address});\n          const { lat, lng } = await getLatLng(results[0]);\n          return ({lat, lng})\n        } catch(error) {\n          console.log(\"error1\");\n        }\n  }, []);\n\n  const handleNewCenterClose = () => setNewCenterShow(false);\n  const handleNewCenterShow = () => setNewCenterShow(true);\n  const handleAddVaccClose = () => setAddVaccShow(false);\n  const handleAddVaccShow = () => setAddVaccShow(true);\n  const handleMoreInfoShow = () => setMoreInfoShow(true);\n  const handleMoreInfoHide = () => setMoreInfoShow(false);\n  const handleStateChartShow = () => setStateChartShow(true);\n  const handleStateChartClose = () => setStateChartShow(false);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n\n\n  return (<div>\n    <div className=\"navbar-custom\">\n      <img src=\"logo.png\" alt=\"logo\" id=\"logo\"/>\n      <Search panTo={panTo} getLatLngFromAddress={getLatLngFromAddress} handleShow={handleNewCenterShow}/>\n      <Button onClick={handleStateChartShow} className=\"stateChartButton\"> Numbers by State </Button>\n      <Locate panTo={panTo} returnZoom={returnZoom} />\n    </div>\n\n    <Modal show={stateChartShow} onHide={handleStateChartClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Vaccination Numbers by State</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table>\n            <thead>\n              <tr>\n                <th>State</th>\n                <th>No. of First Doses</th>\n                <th>No. of Second Doses</th>\n              </tr>\n            </thead>\n          </Table>\n        </Modal.Body>\n    </Modal>\n\n\n    <Modal show={newCenterShow} onHide={handleNewCenterClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Vaccination Site</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Create getVaccCenterLatLong={getVaccCenterLatLong} setMarkers={setMarkers} markers={markers} SERVICE_URL={SERVICE_URL} handleClose={handleNewCenterClose}/>\n        </Modal.Body>\n    </Modal>\n\n    <Modal show={addVaccShow} onHide={handleAddVaccClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Vaccinations</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddVacc handleClose={handleAddVaccClose} SERVICE_URL={SERVICE_URL} vaccCenter={selected} updateMarker={updateMarker}/>\n        </Modal.Body>\n    </Modal>\n\n    <GoogleMap \n    mapContainerStyle={mapContainerStyle}\n    zoom={startZoom}\n    center={center}\n    options={options}\n    onLoad={onMapLoad}>\n      {markers.map((marker, i) => \n        <Marker \n          key={i} \n          position={{lat: parseFloat(marker.latitude), lng: parseFloat(marker.longitude)}}\n          onClick={() => {\n            panTo({lat: parseFloat(marker.latitude), lng: parseFloat(marker.longitude)}, 14);\n            setSelected(marker);\n          }}\n        />\n      )}\n\n      {selected ? (\n        <InfoWindow \n        position={{lat: parseFloat(selected.latitude), lng: parseFloat(selected.longitude)}} \n        onCloseClick={() => {\n          setSelected(null);\n          handleMoreInfoHide();\n          }}>\n          <div>\n            <div>\n              <h6>{selected.name}</h6>\n              <div className=\"seeMore\">\n                { moreInfoShow ? \n                  <div id=\"info\">\n                  <div>\n                    {selected.address}\n                  </div>\n                  <div>\n                    {selected.city}, {selected.state} {selected.zipcode}\n                  </div>\n                  <div>\n                    {selected.phoneNumber}\n                  </div>\n                  <button onClick={handleMoreInfoHide} className=\"moreHide\">Hide...</button>\n                </div>\n                :  \n                <button onClick={handleMoreInfoShow} className=\"moreHide\">See more info...</button>\n              }\n              </div>\n            </div>\n            <hr />\n            <div>\n              <div>\n                1st Dose: {selected.singleDoses}\n              </div>\n              <div>\n                2nd Dose: {selected.doubleDoses}\n              </div>\n              \n              Total Vaccinated: {selected.singleDoses + selected.doubleDoses}\n            </div>\n            <hr />\n            <div className=\"infoEditBar\">\n              <Button onClick={handleAddVaccShow}>Add Vaccinations</Button>\n            </div>\n          </div>\n        </InfoWindow>\n      ) : null}\n    </GoogleMap>\n  </div>)\n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}