{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from 'react-bootstrap';\nimport { useInput } from './hooks/input-hook';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddUser({\n  SERVICE_URL,\n  setCreateUser,\n  vaccCenters\n}) {\n  _s();\n\n  const {\n    value: username,\n    bind: bindUsername,\n    reset: resetUsername\n  } = useInput('');\n  const {\n    value: password,\n    bind: bindPassword,\n    reset: resetPassword\n  } = useInput('');\n  const {\n    value: password2,\n    bind: bindPassword2,\n    reset: resetPassword2\n  } = useInput('');\n  const [vaccCenterAccesses, setVaccCenterAccesses] = useState([]);\n  const [formErrors, setFormErrors] = useState({});\n\n  const validateForm = user => {\n    let errors = {\n      isValid: true\n    };\n\n    if (!user.userName) {\n      errors.userName = \"Please enter a username\";\n      errors.isValid = false;\n    }\n\n    if (!user.password) {\n      errors.password = \"Please enter a password\";\n      errors.isValid = false;\n    } else if (user.password !== user.password2) {\n      errors.password2 = \"Passwords do not match.\";\n      errors.isValid = false;\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFormErrors({});\n    const user = {\n      \"userName\": username,\n      \"password\": password,\n      \"vaccCenterAccesses\": vaccCenterAccesses\n    };\n    console.log(user);\n    return;\n    let validationErrors = validateForm({ ...user,\n      password2\n    });\n\n    if (!validationErrors.isValid) {\n      setFormErrors(validationErrors);\n      return;\n    }\n\n    fetch(SERVICE_URL + '/AdminPortal/CreateUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      console.log('Add User - Success:', data);\n      setCreateUser(false);\n    }).catch(error => {\n      console.log('Add User - Error:', error);\n    });\n    resetUsername();\n    resetPassword();\n    resetPassword2();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          ...bindUsername,\n          isInvalid: !!formErrors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: formErrors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          ...bindPassword,\n          isInvalid: !!formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Re-enter Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Re-Enter Password\",\n          ...bindPassword2,\n          isInvalid: !!formErrors.password2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: formErrors.password2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.ControlSelect2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"VaccCenter Access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          multiple: true,\n          value: vaccCenterAccesses,\n          onChange: e => console.log(e.target.id),\n          children: vaccCenters.map(center => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: center.name\n          }, center.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 51\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"D5BOIsmSQA4TmF3zNk8tDNvy1iM=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/joey/Desktop/software-guild/final-project/VaccTrak/vacctrack-frontend/coolkids-vacctrack/src/AddUser.js"],"names":["Form","Button","useInput","useState","AddUser","SERVICE_URL","setCreateUser","vaccCenters","value","username","bind","bindUsername","reset","resetUsername","password","bindPassword","resetPassword","password2","bindPassword2","resetPassword2","vaccCenterAccesses","setVaccCenterAccesses","formErrors","setFormErrors","validateForm","user","errors","isValid","userName","handleSubmit","e","preventDefault","console","log","validationErrors","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","target","id","map","center","name"],"mappings":"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","sourcesContent":["import { Form, Button } from 'react-bootstrap';\nimport { useInput } from './hooks/input-hook';\nimport { useState } from 'react';\n\nfunction AddUser ({  SERVICE_URL, setCreateUser, vaccCenters }) {\n  const { value:username, bind:bindUsername, reset:resetUsername } = useInput('');\n  const { value:password, bind:bindPassword, reset:resetPassword } = useInput('');\n  const { value:password2, bind:bindPassword2, reset:resetPassword2 } = useInput('');\n  const [vaccCenterAccesses, setVaccCenterAccesses] = useState([])\n  const [formErrors, setFormErrors] = useState({});\n\n  const validateForm = (user) => {\n    let errors = {isValid: true};\n\n    if (!user.userName) {\n      errors.userName = \"Please enter a username\";\n      errors.isValid = false;\n    }\n\n    if(!user.password) {\n      errors.password = \"Please enter a password\"\n      errors.isValid = false;\n    } else if (user.password !== user.password2){\n      errors.password2 = \"Passwords do not match.\"\n      errors.isValid = false;\n    }\n\n    return errors;\n  }\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setFormErrors({});\n    const user = {\n        \"userName\": username,\n        \"password\": password,\n        \"vaccCenterAccesses\": vaccCenterAccesses\n    }\n    console.log(user);\n    return;\n\n    let validationErrors = validateForm({...user, password2});\n    if (!validationErrors.isValid) {\n      setFormErrors(validationErrors);\n      return;\n    }\n\n\n    fetch(SERVICE_URL + '/AdminPortal/CreateUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Add User - Success:', data);\n      \n      setCreateUser(false);\n    })\n    .catch((error) => {\n      console.log('Add User - Error:', error);\n    });\n\n\n    resetUsername();\n    resetPassword();\n    resetPassword2();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"username\">\n                      <Form.Label>Username:</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Username\" {...bindUsername} isInvalid={!!formErrors.username}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                      {formErrors.username}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group controlId=\"password1\">\n                      <Form.Label>Password:</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"Password\" {...bindPassword} isInvalid={!!formErrors.password}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                      {formErrors.password}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group controlId=\"password2\">\n                      <Form.Label>Re-enter Password:</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"Re-Enter Password\" {...bindPassword2} isInvalid={!!formErrors.password2}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                      {formErrors.password2}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                    <Form.Label>VaccCenter Access</Form.Label>\n                    <Form.Control as=\"select\" multiple value={vaccCenterAccesses} onChange={(e)=>console.log(e.target.id)}>\n                      {vaccCenters.map(center => (<option key={center.id}>{center.name}</option>))}\n                    </Form.Control>\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}